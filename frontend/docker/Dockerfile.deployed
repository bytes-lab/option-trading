# Stage 0, "build-stage", based on Node.js, to build and compile the frontend.
FROM node:12-alpine as build-stage

# Set the target environment of this build.
ARG TARGET_ENV

# Set the application home.
ENV APP_HOME=/home/app/frontend
RUN mkdir -p $APP_HOME
WORKDIR $APP_HOME

# Add the node modules executables directory to the $PATH.
ENV PATH $APP_HOME/node_modules/.bin:$PATH

# Build and install the frontend for the target env.
COPY package.json ./
COPY package-lock.json ./
RUN npm ci --silent
# RUN npm install react-scripts@4.0.3 -g --silent
COPY . ./
RUN rm -f .env*
COPY .env.$TARGET_ENV ./
RUN npm run build:$TARGET_ENV

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:1.19.0-alpine
RUN rm /etc/nginx/conf.d/default.conf
COPY ./nginx/nginx.conf.template /etc/nginx/templates/nginx.conf.template

# Copy the frontend file built in Stage 0.
COPY --from=build-stage /home/app/frontend/build/ /home/app/frontend/build/
